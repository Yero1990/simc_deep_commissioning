head	1.6;
access;
symbols;
locks
	mdn:1.6; strict;
comment	@# @;


1.6
date	2003.06.17.01.13.48;	author mdn;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.17.01.02.51;	author mdn;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.17.00.58.58;	author mdn;	state Exp;
branches;
next	1.3;

1.3
date	2003.06.08.20.32.20;	author mdn;	state Exp;
branches;
next	1.2;

1.2
date	2003.05.31.17.20.29;	author mdn;	state Exp;
branches;
next	1.1;

1.1
date	2003.05.31.17.09.22;	author mdn;	state Exp;
branches;
next	;


desc
@Start
@


1.6
log
@*** empty log message ***
@
text
@#***************************************************************************
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#
#***************************************************************************/

#
# start configure
#

PREFIX        = $(ROOTSYS)
INCDIR        = $(PREFIX)/include
LIBDIR        = $(PREFIX)/lib
MACRODIR      = $(PREFIX)/macros

#
# end configure
#

ARCH          = $(shell root-config --arch)

CXX           =
ObjSuf        = o
SrcSuf        = cxx
ExeSuf        =
DllSuf        = so
OutPutOpt     = -o # keep whitespace after "-o"

ROOTCFLAGS   := $(shell root-config --cflags)
ROOTLIBS     := $(shell root-config --libs)
ROOTGLIBS    := $(shell root-config --glibs)

ifeq ($(ARCH),linux)
# Linux with egcs, gcc 2.9x, gcc 3.x (>= RedHat 5.2)
CXX           = g++
CXXFLAGS      = -O -Wall -fPIC
LD            = g++
LDFLAGS       = -O
SOFLAGS       = -shared
endif

ifeq ($(CXX),)
$(error $(ARCH) invalid architecture)
endif

CXXFLAGS     += $(ROOTCFLAGS) -Wno-deprecated
LIBS          = $(ROOTLIBS) $(SYSLIBS)
GLIBS         = $(ROOTGLIBS) $(SYSLIBS)

#------------------------------------------------------------------------------
.PHONY      = clean distclean distclean ci install uninstall

HDRS        = THistograteUtil.h grootutil.h THistList.h THistogrator.h THistogrator1.h THistogrator2.h
SRCS        = THistograteUtil.C grootutil.C THistList.C THistogrator.C THistogrator1.C THistogrator2.C
OBJS        = THistograteUtil.o grootutil.o THistList.o THistogrator.o THistogrator1.o THistogrator2.o

PROGRAM     = libHistogrator.so

DICTHDRS        = THistograteUtilDict.h grootutilDict.h THistListDict.h THistogratorDict.h THistogrator1Dict.h THistogrator2Dict.h
DICTSRCS        = THistograteUtilDict.C grootutilDict.C THistListDict.C THistogratorDict.C THistogrator1Dict.C THistogrator2Dict.C
DICTOBJS        = THistograteUtilDict.o grootutilDict.o THistListDict.o THistogratorDict.o THistogrator1Dict.o THistogrator2Dict.o

all:    $(PROGRAM)

$(PROGRAM): $(OBJS) $(DICTOBJS)
	@@echo "Linking $(PROGRAM)"
	@@/bin/rm -f $(PROGRAM)
	@@$(LD) $(LDFLAGS) $(SOFLAGS) $(OBJS) $(DICTOBJS) $(GLIBS) -o $(PROGRAM)
	@@chmod 555 $(PROGRAM)
	@@echo "done"

install:
	@@cp -iv $(PROGRAM) $(LIBDIR)/
#	@@cp -iv $(HDRS) $(INCDIR)/
	@@cp -iv scripts/Histograte.C $(MACRODIR)/

uninstall:
	@@(cd $(LIBDIR) && rm -vf $(PROGRAM))
#	@@(cd $(INCDIR) && rm -vf $(HDRS))
	@@(cd $(MACRODIR) && rm -vf Histograte.C)

ci:
	@@(ci -l $(HDRS))
	@@(ci -l $(SRCS))
	@@(ci -l Makefile)
	@@(ci -l *LinkDef*)
	@@(ci -l README INSTALL COPYING AUTHORS)
	
clean:
	@@/bin/rm -f $(OBJS) $(DICTOBJS) $(DICTSRCS) $(DICTHDRS) G_* *.o core

distclean:	clean
	@@/bin/rm -f $(PROGRAM) *.so
	
dist: clean
	@@tar czf $(DISTNAME)-v$(VERSION).tar.gz .
	@@mv $(DISTNAME)-v$(VERSION).tar.gz dist/

###

THistograteUtil.o: THistograteUtil.h

THistograteUtilDict.C: THistograteUtil.h
	@@echo "Generating dictionary $@@"
	@@/bin/rm -f $@@
	@@rootcint $@@ -c $^
	@@echo "done"

grootutil.o: grootutil.h

grootutilDict.C: grootutil.h grootutilLinkDef.h
	@@echo "Generating dictionary $@@"
	@@/bin/rm -f $@@
	@@rootcint $@@ -c $^
	@@echo "done"

THistList.o: THistList.h

THistListDict.C: THistList.h
	@@echo "Generating dictionary $@@"
	@@/bin/rm -f $@@
	@@rootcint $@@ -c $^
	@@echo "done"

THistogrator.o: THistogrator.h

THistogratorDict.C: THistogrator.h
	@@echo "Generating dictionary $@@"
	@@/bin/rm -f $@@
	@@rootcint $@@ -c $^
	@@echo "done"

THistogrator1.o: THistogrator1.h

THistogrator1Dict.C: THistogrator1.h
	@@echo "Generating dictionary $@@"
	@@/bin/rm -f $@@
	@@rootcint $@@ -c $^
	@@echo "done"

THistogrator2.o: THistogrator2.h

THistogrator2Dict.C: THistogrator2.h
	@@echo "Generating dictionary $@@"
	@@/bin/rm -f $@@
	@@rootcint $@@ -c $^
	@@echo "done"
@


1.5
log
@*** empty log message ***
@
text
@d78 1
a78 1
	@@echo "Linking $(PROGRAM)..."
d116 3
a118 3
	@@echo "Generating dictionary..."
	@@/bin/rm -f THistograteUtilDict.C
	@@rootcint THistograteUtilDict.C -c THistograteUtil.h
d123 4
a126 4
grootutilDict.C: grootutil.h
	@@echo "Generating dictionary..."
	@@/bin/rm -f grootutilDict.C
	@@rootcint grootutilDict.C -c grootutil.h grootutilLinkDef.h
d132 3
a134 3
	@@echo "Generating dictionary..."
	@@/bin/rm -f THistListDict.C
	@@rootcint THistListDict.C -c THistList.h
d140 3
a142 3
	@@echo "Generating dictionary..."
	@@/bin/rm -f THistogratorDict.C
	@@rootcint THistogratorDict.C -c THistogrator.h
d148 3
a150 3
	@@echo "Generating dictionary..."
	@@/bin/rm -f THistogrator1Dict.C
	@@rootcint THistogrator1Dict.C -c THistogrator1.h
d156 3
a158 3
	@@echo "Generating dictionary..."
	@@/bin/rm -f THistogrator2Dict.C
	@@rootcint THistogrator2Dict.C -c THistogrator2.h
@


1.4
log
@*** empty log message ***
@
text
@d85 1
a85 1
	@@cp -iv *.so $(LIBDIR)/
d91 2
a92 1
	@@(cd $(INCDIR) && rm -vf $(HDRS))
@


1.3
log
@*** empty log message ***
@
text
@d1 1
a1 3
# Makefile for the ROOT THistogrator1 programs.
# This Makefile shows nicely how to compile and link applications
# using the ROOT libraries on all supported platforms.
d3 27
a29 1
# Copyright (c) 2000 Rene Brun and Fons Rademakers
a30 1
# Author: Fons Rademakers, 29/2/2000
d65 5
a69 7
HDRS        =  THistograteUtil.h grootutil.h THistList.h THistogrator.h THistogrator1.h THistogrator2.h
SRCS        = main.C THistograteUtil.C grootutil.C THistList.C THistogrator.C THistogrator1.C THistogrator2.C
OBJS        = main.o THistograteUtil.o grootutil.o THistList.o THistogrator.o THistogrator1.o THistogrator2.o

PROGRAM     = myroot
DISTNAME	= histogrator
VERSION		= 3.1
d80 1
a80 1
	@@$(LD) $(LDFLAGS) $(OBJS) $(DICTOBJS) $(GLIBS) -o $(PROGRAM)
d86 2
a87 1
	@@cp -iv $(HDRS) $(INCDIR)/
@


1.2
log
@*** empty log message ***
@
text
@d42 3
a44 3
HDRS        = main.h histutil.h grootutil.h THistList.h THistogrator.h THistogrator1.h THistogrator2.h
SRCS        = main.C histutil.C grootutil.C THistList.C THistogrator.C THistogrator1.C THistogrator2.C
OBJS        = main.o histutil.o grootutil.o THistList.o THistogrator.o THistogrator1.o THistogrator2.o
d50 3
a52 3
DICTHDRS        = mainDict.h histutilDict.h grootutilDict.h THistListDict.h THistogratorDict.h THistogrator1Dict.h THistogrator2Dict.h
DICTSRCS        = mainDict.C histutilDict.C grootutilDict.C THistListDict.C THistogratorDict.C THistogrator1Dict.C THistogrator2Dict.C
DICTOBJS        = mainDict.o histutilDict.o grootutilDict.o THistListDict.o THistogratorDict.o THistogrator1Dict.o THistogrator2Dict.o
d59 1
a59 1
	@@$(LD) $(LDFLAGS) $(OBJS) $(DICTOBJS) $(ROOTLIBS) -o $(PROGRAM)
d90 1
a90 1
main.o: main.h
d92 1
a92 1
mainDict.C: main.h
d94 2
a95 10
	@@/bin/rm -f mainDict.C
	@@rootcint mainDict.C -c main.h mainLinkDef.h
	@@echo "done"

histutil.o: histutil.h

histutilDict.C: histutil.h
	@@echo "Generating dictionary..."
	@@/bin/rm -f histutilDict.C
	@@rootcint histutilDict.C -c histutil.h histutilLinkDef.h
@


1.1
log
@Initial revision
@
text
@d76 1
a76 2
	@@(ci -l README)
	@@(ci -l INSTALL)
@
